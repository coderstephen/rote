require "cargo"
require "fs"
require "pkg"
default "debug"


desc("Build a debug binary")
task("debug", function()
    print "Building debug version..."
    cargo.build()
end)

desc("Build a release binary")
task("release", function()
    cargo.build {
        release = true
    }
end)

desc("Clean the project directory")
task("clean", function()
    cargo.clean()
end)

desc("Build a Debian binary package")
task("deb", {"target/release/rote"}, function()
    pkg.deb {
        output = "target/release/rote.deb",
        name = "rote",
        version = cargo.info().version,
        arch = "amd64",
        maintainer = "Stephen Coakley <me@stephencoakley.com>",
        description = "Plain and simple task and build tool",
        long_description = "blah\n\nblah.",
        depends = {
            lib32gcc1 = ">= 5.0",
            libc6 = ">= 2.21",
            libgcc1 = ">= 5.0",
        },
        files = {
            ["usr/bin/rote"] = "target/release/rote",
        },
    }
end)

desc("Runs tests")
task("test", function()
    for _, file in ipairs(glob("tests/*.lua")) do
        print("[" .. file .. "]")
        local success, err = pcall(function()
            return dofile(file)
        end)

        if not success then
            error("FAIL! Reason: " .. err)
        else
            print "PASS"
        end
    end
end)

rule("target/release/rote", function()
    cargo.build {
        release = true
    }
end)
